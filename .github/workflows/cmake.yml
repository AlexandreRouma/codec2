name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install packages
      shell: bash
      run: sudo apt install octave octave-common octave-signal liboctave-dev gnuplot \
           sox p7zip-full python3-numpy valgrind 

    - name: Create Build Directory
      shell: bash
      run: mkdir $GITHUB_WORKSPACE/build_linux

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build_linux
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE

    - name Setup CML Support
      shell: bash
      run: $GITHUB_WORKSPACE/scripts/build_cml.sh
      
    - name: Build
      working-directory: ${{github.workspace}}/build_linux
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: make

    - name: Test
      working-directory: ${{github.workspace}}/build_linux
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest
